# Time - two digit hour, minute, second, and optional nanoseconds
TIME \d{2}:\d{2}:\d{2}\.{0,1}\d{0,9}

# Log message timestamp: 2016-08-23T16:20:13-04:00
TIMEZONE [+-]\d{2}:\d{2}
LOG_MSG_TIMESTAMP \d{4}-\d{2}-\d{2}T%{TIME:UNWANTED}%{TIMEZONE:UNWANTED}

# NiFi message timestamp: 2016-08-23T16:20:13-0400
NIFI_TIMEZONE [+-]\d{4}
NIFI_MSG_TIMESTAMP \d{4}-\d{2}-\d{2}T%{TIME:UNWANTED}%{NIFI_TIMEZONE:UNWANTED}

# Source
SOURCE .*

# Log start - the first part of the log line
LOGSTART %{LOG_MSG_TIMESTAMP:timestamp_string} %{SOURCE:hostname} %{SOURCE:program}

# Log Message
MESSAGE .*

# Log end - the level of the log and the message
LOGEND %{MESSAGE:log_message}

#  Log Message Patterns
SECUREPROG %{PROG:program}(?:\[%{POSINT:pid}\])?
SECUREHOST %{IPORHOST:host}
SECUREBASE (%{NIFI_MSG_TIMESTAMP:nifi_timestamp}%{SPACE:UNWANTED})?%{LOG_MSG_TIMESTAMP:secure_timestamp}%{SPACE:UNWANTED}%{SECUREHOST:UNWANTED}%{SPACE:UNWANTED}%{SECUREPROG:UNWANTED}:%{SPACE:UNWANTED}%{GREEDYDATA:log_message}
SECURESU (runuser: |)%{PROG:pam_program}(?:\[%{POSINT:pid}\])? session %{WORD:session} for user %{USER:user}( by \(uid=%{NUMBER:su_caller_uid}\)|)
SECURESUDORUN (%{USER:user} : TTY=%{DATA:tty} ; PWD=%{DATA:password} ; USER=%{USER:sudo_runas_user} ; COMMAND=%{GREEDYDATA:sudo_command}|\S+:%{SPACE}(TGT verified|error reading keytab %{GREEDYDATA:UNWANTED}|authentication %{WORD:authentication} for '%{USER:user}'%{GREEDYDATA:UNWANTED}|%{GREEDYDATA:UNWANTED}user=%{USER:user}))
SECURESSHDPUBKEY (Found matching RSA key: %{GREEDYDATA:rsa_key}|%{WORD} publickey for %{USER:user} from %{IPORHOST:src_ip}( port %{NUMBER:port} %{WORD}( \[preauth\]|: RSA %{GREEDYDATA:rsa_key}|)|))
SECURESSHDREST Did not receive identification string from %{IPORHOST:src_ip}
SECURESSHDREST1 pam_unix\((%{DATA:user_command}):session\): session %{WORD:session} for user %{USER:user}
SECURESSHDREST2 Starting session: command for %{USER:user} from %{IPORHOST:src_ip}
SECURESSHDREST3 Connection from %{IPORHOST:src_ip}
SECURESSHDREST4 Accepted (password|publickey) for %{DATA:authenticated_user} from %{IPORHOST:src_ip} port %{POSINT:port}
SECURESSHDREST5 Received disconnect from %{IPORHOST:src_ip}
SECURESSHDREST6 Connection closed by %{IPORHOST:src_ip}
SECURESSHDREST7 User child is on pid %{NUMBER}
SECURESSHDREST8 Set %{UNIXPATH} to %{NUMBER}
SECURENETREG connect from %{IPORHOST:src_ip}%{GREEDYDATA:UNWANTED}
SECURENETBADGE (%{WORD:whois_action}|Authentication %{WORD:auth_result}): (reply from %{URI:whois_uri}: Result: %{GREEDYDATA:whois_result}|User: %{USER:user}, %{GREEDYDATA:auth_result_detail}, From: %{IPORHOST:src_ip}, %{GREEDYDATA:UNWANTED}, URL: %{URI:netbadge_source_uri})
AUTHFAILURE pam_unix\((%{DATA:user_command}):auth\): authentication failure; logname=%{DATA:logname} uid=%{INT:uid} euid=%{INT:euid} tty=%{DATA:tty} ruser=%{DATA:failed_authentication_user} rhost=%{IPORHOST:src_ip}
USERMESSAGE %{GREEDYDATA:message} user (%{USER:user}|%{DATA:user})(%{SPACE:UNWANTED}from %{IPORHOST:src_ip})?(%{SPACE:UNWANTED}port %{POSINT:port})?(%{SPACE:UNWANTED}%{WORD:process})?
AUTHENTICATION_SUCCEEDED_PASSWORDLESS (pam_unix|pam_vas): Authentication <succeeded passwordless> for <%{DATA:method}> user: <%{DATA:authenticated_user}> account: <%{DATA:account}> service: <%{WORD:service}> reason: <%{GREEDYDATA:reason}>
AUTHENTICATION_SUCCEEDED (pam_unix|pam_vas): Authentication <succeeded> for <%{DATA:method}> user: <%{DATA:authenticated_user}> account: <%{DATA:account}> service: <%{WORD:service}> reason: <%{GREEDYDATA:reason}>
AUTHENTICATION_FAILED (pam_unix|pam_vas): Authentication <failed> for <%{DATA:method}> user: <%{DATA:failed_authentication_user}> account: <%{DATA:account}> service: <%{WORD:service}> reason: <%{GREEDYDATA:reason}>
MESSAGE1 \[origin software=\"%{DATA:software_name}\" swVersion=\"%{DATA:software_version}\" x\-pid=\"%{POSINT:pid}\" x\-info=\"%{DATA:software_info}\"\] %{WORD:UNWANTED} was %{WORD:action}
MESSAGE2 %{WORD:action} on %{DATA:adapter} to %{IPORHOST:src_ip} port %{POSINT:port} interval %{POSINT:interval}
MESSAGE3 <%{WORD:log_level}> (%{WORD:adapter}): %{WORD:action} %{GREEDYDATA:warning}.
MESSAGE4 <%{WORD:log_level}> (%{WORD:adapter}): %{WORD:action} %{WORD:application} transaction, %{WORD:UNWANTED} client pid %{POSINT:pid}
MESSAGE5 <%{WORD:log_level}> Activation \(%{WORD:adapter}\) Stage %{POSINT:stage_current} of %{POSINT:stage_total} \(%{DATA:protocol} %{GREEDYDATA:description}\) %{WORD:action}...
STATECHANGE <%{WORD:log_level}> (%{WORD:adapter}): %{WORD:changed} state change: %{DATA:change} -> %{WORD:result} (reason '%{DATA:reason}') [%{GREEDYDATA:UNWANTED]
MESSAGE6 <%{WORD:log_level}> Marking connection '%{DATA:connection}' %{WORD:status}.
ACTIVATIONFAILED <%{WORD:log_level}> Activation (%{WORD:adapter}) failed.
POLICYSET <%{WORD:log_level}> Policy set \'%{GREEDYDATA:description}\' (%{WORD:adapter}) as %{WORD:policy} for %{GREEDYDATA:policy_for}.
LISTENING Listening on %{GREEDYDATA:adapter}
FAILEDPASSWORD Failed (password|publickey) for %{DATA:failed_authentication_user} from %{IPORHOST:src_ip} port %{POSINT:port}
